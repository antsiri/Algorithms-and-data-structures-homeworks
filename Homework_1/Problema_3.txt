import random
import string

class TreapNode:
    def __init__(self, key):
        self.key = key
        self.priority = random.randint(0,99)
        self.left = None
        self.right = None

def rightRotate(y):
    x = y.left
    T2 = x.right

    x.right = y
    y.left = T2

    return x

def leftRotate(x):
    y = x.right
    T2 = y.left

    y.left = x
    x.right = T2

    return y

def insert(root, key):
    if not root:
        return TreapNode(key)
    
    if key <= root.key:
        root.left = insert(root.left, key)

        if root.left.priority < root.priority:
            root = rightRotate(root)
    
    else:
        root.right = insert(root.right, key)

        if root.right.priority < root.priority:
            root = leftRotate(root)
    
    return root


def inorder(root):
    if root:
        inorder(root.left)
        print("key:", root.key, "| priority:", root.priority, end="")
        if root.left:
            print(" | left child:", root.left.key, end="")
        if root.right:
            print(" | right child:", root.right.key, end="")
        print()
        inorder(root.right)


if __name__ == '__main__':
 
    root = None
    root = insert(root, 50)
    root = insert(root, 30)
    root = insert(root, 20)
    root = insert(root, 40)
    root = insert(root, 70)
    root = insert(root, 60)
    root = insert(root, 80)

    inorder(root)

    root = insert(root, 90)

    print("Print after insert 90\n")
    inorder(root)
